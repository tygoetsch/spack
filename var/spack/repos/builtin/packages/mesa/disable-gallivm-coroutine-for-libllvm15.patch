From 0ff8ee6678a74f243c6c2b9a24a80fb7458f3da8 Mon Sep 17 00:00:00 2001
From: Renjith Ravindran <Renjith.RavindranKannath@amd.com>
Date: Tue, 8 Nov 2022 17:19:51 -0800
Subject: [PATCH] disable gallivm for libllvm15

---
 src/gallium/auxiliary/gallivm/lp_bld.h | 51 +++++++++++++++++++++++++-
 1 file changed, 50 insertions(+), 1 deletion(-)

diff --git a/src/gallium/auxiliary/gallivm/lp_bld.h b/src/gallium/auxiliary/gallivm/lp_bld.h
index 9144428..e1f6200 100644
--- a/src/gallium/auxiliary/gallivm/lp_bld.h
+++ b/src/gallium/auxiliary/gallivm/lp_bld.h
@@ -81,10 +81,59 @@
 #define LLVMInsertBasicBlock ILLEGAL_LLVM_FUNCTION
 #define LLVMCreateBuilder ILLEGAL_LLVM_FUNCTION
 
-#if LLVM_VERSION_MAJOR >= 8
+#if LLVM_VERSION_MAJOR >= 15
+#define GALLIVM_HAVE_CORO 0
+#define GALLIVM_USE_NEW_PASS 1
+#elif LLVM_VERSION_MAJOR >= 8
 #define GALLIVM_HAVE_CORO 1
+#define GALLIVM_USE_NEW_PASS 0
 #else
 #define GALLIVM_HAVE_CORO 0
+#define GALLIVM_USE_NEW_PASS 0
 #endif
 
+#define GALLIVM_COROUTINES (GALLIVM_HAVE_CORO || GALLIVM_USE_NEW_PASS)
+
+/* LLVM is transitioning to "opaque pointers", and as such deprecates
+ * LLVMBuildGEP, LLVMBuildCall, LLVMBuildLoad, replacing them with
+ * LLVMBuildGEP2, LLVMBuildCall2, LLVMBuildLoad2 respectivelly.
+ * These new functions were added in LLVM 8.0; so for LLVM before 8.0 we
+ * simply forward to the non-opaque-pointer variants.
+ */
+#if LLVM_VERSION_MAJOR < 8
+
+static inline LLVMValueRef
+LLVMBuildGEP2(LLVMBuilderRef B, LLVMTypeRef Ty,
+              LLVMValueRef Pointer, LLVMValueRef *Indices,
+              unsigned NumIndices, const char *Name)
+{
+   return LLVMBuildGEP(B, Pointer, Indices, NumIndices, Name);
+}
+
+static inline LLVMValueRef
+LLVMBuildInBoundsGEP2(LLVMBuilderRef B, LLVMTypeRef Ty,
+                      LLVMValueRef Pointer, LLVMValueRef *Indices,
+                      unsigned NumIndices, const char *Name)
+{
+   return LLVMBuildInBoundsGEP(B, Pointer, Indices, NumIndices, Name);
+}
+
+static inline LLVMValueRef
+LLVMBuildLoad2(LLVMBuilderRef B, LLVMTypeRef Ty,
+               LLVMValueRef PointerVal, const char *Name)
+{
+  LLVMValueRef val = LLVMBuildLoad(B, PointerVal, Name);
+  return LLVMTypeOf(val) == Ty ? val : LLVMBuildBitCast(B, val, Ty, Name);
+}
+
+static inline LLVMValueRef
+LLVMBuildCall2(LLVMBuilderRef B, LLVMTypeRef Ty, LLVMValueRef Fn,
+               LLVMValueRef *Args, unsigned NumArgs,
+               const char *Name)
+{
+   return LLVMBuildCall(B, Fn, Args, NumArgs, Name);
+}
+
+#endif /* LLVM_VERSION_MAJOR < 8 */
+
 #endif /* LP_BLD_H */
-- 
2.25.1

